{"version":3,"sources":["Patient.js","StaticPatient.js","images/location.png","images/tracker.png","App.js","index.js"],"names":["rxnorm","MedRow","med","name","out","coding","find","c","system","display","getMedicationName","getPath","status","intent","Patient","patient","meds","console","log","className","style","padding","map","id","theme","global","font","family","size","height","StaticPatient","Grommet","full","Main","pad","Box","direction","gap","basis","Card","CardBody","Heading","margin","level","Paragraph","maxLines","bottom","wrap","width","Tag","value","App","sessionStorage","clear","rootElement","document","getElementById","SMART","init","clientId","scope","pkceMode","fullSessionStorageSupport","completeInTarget","then","client","Promise","all","read","catch","err","request","render","error","undefined"],"mappings":"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","file":"static/js/main.773a7199.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { getPath } from \"fhirclient/lib/lib\";\nimport { PatientVisualizer } from 'fhir-visualizers';\n\nconst rxnorm = \"http://www.nlm.nih.gov/research/umls/rxnorm\";\n\nfunction getMedicationName(medCodings = []) {\n  let out = \"Unnamed Medication(TM)\";\n  const coding = medCodings.find((c) => c.system === rxnorm);\n  if (coding && coding.display) {\n    out = coding.display;\n  }\n  return out;\n}\n\nfunction PatientName({ name = [] }) {\n  let entry =\n    name.find((nameRecord) => nameRecord.use === \"official\") || name[0];\n  if (!entry) {\n    return <h1>No Name</h1>;\n  }\n  return <h1>{entry.given.join(\" \") + \" \" + entry.family}</h1>;\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction PatientBanner(patient) {\n  return (\n    <div>\n      <PatientName name={patient.name} />\n      <span>\n        Gender: <b>{patient.gender}</b>,{\" \"}\n      </span>\n      <span>\n        DOB: <b>{patient.birthDate}</b>\n      </span>\n    </div>\n  );\n}\n\nfunction MedRow({ med }) {\n  const name = getMedicationName(\n    getPath(med, \"medicationCodeableConcept.coding\") ||\n    getPath(med, \"medicationReference.code.coding\")\n  );\n  return (\n    <tr>\n      <td>\n        <b>{name}</b>\n      </td>\n      <td>{med.status || \"-\"}</td>\n      <td>{med.intent || \"-\"}</td>\n      <td>{getPath(med, \"dosageInstruction.0.text\") || \"-\"}</td>\n    </tr>\n  );\n}\n\nfunction Patient({\n  patient,\n  meds,\n}) {\n  console.log(patient);\n  return (\n    <div className=\"App\" style={{ padding: '20px' }}>\n      {patient ? <PatientVisualizer patient={patient} /> : <></>}\n      <hr />\n      {meds ? <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th>Medication</th>\n            <th>Status</th>\n            <th>Intent</th>\n            <th>Dosage Instruction</th>\n          </tr>\n        </thead>\n        <tbody>\n          {meds.map((med) => (\n            <MedRow key={med.id} med={med} />\n          ))}\n        </tbody>\n      </table> : <></>}\n    </div>\n  );\n}\n\nexport default Patient;","import React from 'react';\nimport {\n\tAvatar,\n\tGrommet,\n\tMain,\n\tHeading,\n\tParagraph,\n\tCard,\n\tCardBody,\n\tImage,\n\tBox,\n\tTag,\n\tTabs,\n\tTab\n} from 'grommet';\nimport LocationImg from './images/location.png';\nimport TrackerImg from './images/tracker.png';\n\nconst theme = {\n\tglobal: {\n\t\tfont: {\n\t\t\tfamily: 'Roboto',\n\t\t\tsize: '18px',\n\t\t\theight: '20px',\n\t\t},\n\t},\n};\n\n\n\n// Weight\n// Race\n// White\n// Ethnicity\n// Not Hispanic or Latino\n// Language\n// English\n// Blood Type\n// unknown\n\nfunction StaticPatient() {\n\treturn (\n    <Grommet theme={theme} full>\n      {/* <ResponsiveContext.Consumer> */}\n      <Main pad=\"medium\">\n        <Box\n          direction=\"column\"\n          // border={{ color: 'brand', size: 'large' }}\n          pad=\"none\"\n          gap=\"small\"\n          height=\"full\"\n        >\n          <Box\n            direction=\"row\"\n            // border={{ color: 'brand', size: 'large' }}\n            pad=\"small\"\n            gap=\"medium\"\n            height=\"small\"\n          >\n            {/* <Box pad=\"none\" justify=\"center\">\n              <Card height=\"small\">\n                <CardBody pad=\"small\" justify=\"center\">\n                  <Avatar\n                    size=\"xlarge\"\n                    src=\"//s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?\"\n                  />\n                </CardBody>\n              </Card>\n            </Box> */}\n\n            <Box pad=\"none\" direction=\"column\" basis=\"full\">\n              <Card height=\"small\">\n                <CardBody pad=\"small\">\n                  <Heading margin=\"none\" level={4}>\n                    Jake Medlock\n                  </Heading>\n                  <Paragraph\n                    maxLines={2}\n                    size=\"small\"\n                    margin={{ bottom: \"xsmall\" }}\n                  >\n                    10 Cactus Drive, Los Angeles, CA 90001\n                  </Paragraph>\n                  <Box direction=\"row\" gap=\"xsmall\" wrap={true} width=\"xxlarge\">\n                    <Tag size=\"xsmall\" name=\"Gender\" value=\"M\" />\n                    <Tag size=\"xsmall\" name=\"DOB\" value=\"XXXX-XX-XX\" />\n                    <Tag size=\"xsmall\" name=\"Height\" value=\"6 Ft\" />\n                    <Tag size=\"xsmall\" name=\"Weight\" value=\"187 lbs\" />\n                    <Tag size=\"xsmall\" name=\"Blood type\" value=\"O+\" />\n                  </Box>\n                </CardBody>\n              </Card>\n            </Box>\n          </Box>\n          {/* <Box\n            direction=\"row\"\n            // border={{ color: 'brand', size: 'large' }}\n            pad=\"small\"\n            width=\"full\"\n            height=\"full\"\n            // background='dark-3'\n          >\n            <Card basis=\"full\" height={\"3/4\"}>\n              <CardBody pad={\"small\"}>\n                <Tabs justify=\"start\" basis=\"full\">\n                  <Tab title=\"Pain Body Location Map\">\n                    <Box pad=\"medium\" height={\"full\"}>\n                      <Image fit=\"contain\" src={LocationImg} />\n                    </Box>\n                  </Tab>\n                  <Tab title=\"Pain Tracker\">\n                    <Box pad=\"medium\" height={\"full\"}>\n                      <Image fit=\"contain\" fill src={TrackerImg} />\n                    </Box>\n                  </Tab>\n                </Tabs>\n              </CardBody>\n            </Card>\n          </Box> */}\n        </Box>\n      </Main>\n      {/* </ResponsiveContext.Consumer> */}\n    </Grommet>\n  );\n}\n\nexport default StaticPatient;","export default __webpack_public_path__ + \"static/media/location.8fd9cd85.png\";","export default __webpack_public_path__ + \"static/media/tracker.1543b769.png\";","import * as React from \"react\";\nimport Patient from './Patient'\nimport StaticPatient from './StaticPatient';\n\n\nfunction App({ patient, meds }) {\n  sessionStorage.clear()\n\n  if (!(patient)) console.log('Rendering Static App');\n  if (patient) return <Patient patient={patient} meds ={meds}/>;\n  else return <StaticPatient/>\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n// import { oauth2 as SMART } from \"fhirclient\";\nimport { oauth2 as SMART } from 'fhirclient-pkce';\n\nconst rootElement = document.getElementById('root');\n\nSMART.init({\n    // iss: \"https://r4.smarthealthit.org\",\n    // iss: \"https://api.platform.athenahealth.com/432/brand/2/csg/12/fhir/r4\",\n    // redirectUri: \"index.html\",\n    // clientId: \"0oae0chrocZumXh7y297\",  // Internal AMS\n    clientId: \"0oae3i5p2p4ikNR4C297\",     // External AMS\n    scope: \"launch offline_access openid fhirUser user/MedicationRequest.read user/Patient.read user/Observation.read\",\n    pkceMode: \"required\",\n    fullSessionStorageSupport: false,\n\n    // WARNING: completeInTarget=true is needed to make this work in the codesandbox\n    // frame. It is otherwise not needed if the target is not another frame or window\n    // but since the entire example works in a frame here, it gets confused without\n    // setting this!\n    completeInTarget: true\n    \n})\n    .then(client => {\n        // Fetch MedicationRequest and Patient in parallel to load the app faster\n        // console.log(\"client.patient => \", client.patient);\n        return Promise.all([\n            client.patient.read()\n                .catch(function(err){\n                    console.log(err);\n                    return undefined;\n                }),\n            client.patient.request(\"MedicationRequest\")\n                .catch(function(err){\n                    console.log(err);\n                    return undefined;\n                }),\n            // client.request(`/MedicationRequest?patient=${client.patient.id}`, {\n            //     resolveReferences: \"medicationReference\",\n            //     pageLimit: 0,\n            //     flat: true\n            // }),\n        ]);\n    })\n    .then(\n        ([\n            patient, \n            meds\n        ]) => {\n            render(<App \n                patient={patient} \n                meds={meds}\n            />, rootElement);\n        },\n        error => {\n            console.error(error);\n            render(<App \n                patient={undefined} \n                meds={undefined}\n            />, rootElement);\n        }\n    );\n"],"sourceRoot":""}