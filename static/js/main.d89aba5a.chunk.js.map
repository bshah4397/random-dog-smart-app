{"version":3,"sources":["Patient.js","images/location.png","images/tracker.png","StaticPatient.js","App.js","index.js"],"names":["rxnorm","MedRow","med","name","out","coding","find","c","system","display","getMedicationName","getPath","status","intent","Patient","patient","meds","console","log","className","style","padding","map","id","theme","global","font","family","size","height","StaticPatient","Grommet","full","Main","pad","Box","direction","border","color","gap","justify","Card","background","CardBody","Avatar","src","basis","Heading","margin","level","Paragraph","maxLines","bottom","wrap","width","Tag","value","Tabs","Tab","title","Image","fit","LocationImg","fill","TrackerImg","App","rootElement","document","getElementById","SMART","init","clientId","scope","pkceMode","completeInTarget","then","client","Promise","all","read","request","resolveReferences","pageLimit","flat","render","error","undefined"],"mappings":"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","file":"static/js/main.d89aba5a.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { getPath } from \"fhirclient/lib/lib\";\nimport { PatientVisualizer } from 'fhir-visualizers';\n\nconst rxnorm = \"http://www.nlm.nih.gov/research/umls/rxnorm\";\n\nfunction getMedicationName(medCodings = []) {\n  let out = \"Unnamed Medication(TM)\";\n  const coding = medCodings.find((c) => c.system === rxnorm);\n  if (coding && coding.display) {\n    out = coding.display;\n  }\n  return out;\n}\n\nfunction PatientName({ name = [] }) {\n  let entry =\n    name.find((nameRecord) => nameRecord.use === \"official\") || name[0];\n  if (!entry) {\n    return <h1>No Name</h1>;\n  }\n  return <h1>{entry.given.join(\" \") + \" \" + entry.family}</h1>;\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction PatientBanner(patient) {\n  return (\n    <div>\n      <PatientName name={patient.name} />\n      <span>\n        Gender: <b>{patient.gender}</b>,{\" \"}\n      </span>\n      <span>\n        DOB: <b>{patient.birthDate}</b>\n      </span>\n    </div>\n  );\n}\n\nfunction MedRow({ med }) {\n  const name = getMedicationName(\n    getPath(med, \"medicationCodeableConcept.coding\") ||\n      getPath(med, \"medicationReference.code.coding\")\n  );\n  return (\n    <tr>\n      <td>\n        <b>{name}</b>\n      </td>\n      <td>{med.status || \"-\"}</td>\n      <td>{med.intent || \"-\"}</td>\n      <td>{getPath(med, \"dosageInstruction.0.text\") || \"-\"}</td>\n    </tr>\n  );\n}\n\nfunction Patient({ \n\tpatient, \n\tmeds, \n  }) {\n\tconsole.log(patient);\n\treturn (\n\t  <div className=\"App\" style={{padding: '20px'}}>\n\t\t{patient ? <PatientVisualizer patient={patient} /> : <h1>Loading</h1>}\n\t\t<hr/>\n  \n\t\t<table className=\"table table-hover\">\n\t\t  <thead>\n\t\t\t<tr>\n\t\t\t  <th>Medication</th>\n\t\t\t  <th>Status</th>\n\t\t\t  <th>Intent</th>\n\t\t\t  <th>Dosage Instruction</th>\n\t\t\t</tr>\n\t\t  </thead>\n\t\t  <tbody>\n\t\t\t{meds.map((med) => (\n\t\t\t  <MedRow key={med.id} med={med} />\n\t\t\t))}\n\t\t  </tbody>\n\t\t</table>\n\t  </div>\n\t);\n  }\n  \n  export default Patient;","export default __webpack_public_path__ + \"static/media/location.8fd9cd85.png\";","export default __webpack_public_path__ + \"static/media/tracker.1543b769.png\";","import React from 'react';\nimport {\n\tAvatar,\n\tGrommet,\n\tMain,\n\tHeading,\n\tParagraph,\n\tCard,\n\tCardBody,\n\tImage,\n\tBox,\n\tTag,\n\tTabs,\n\tTab\n} from 'grommet';\nimport LocationImg from './images/location.png';\nimport TrackerImg from './images/tracker.png';\n\nconst theme = {\n\tglobal: {\n\t\tfont: {\n\t\t\tfamily: 'Roboto',\n\t\t\tsize: '18px',\n\t\t\theight: '20px',\n\t\t},\n\t},\n};\n\n\n\n// Weight\n// Race\n// White\n// Ethnicity\n// Not Hispanic or Latino\n// Language\n// English\n// Blood Type\n// unknown\n\nfunction StaticPatient() {\n\treturn <Grommet theme={theme} full>\n\t\t{/* <ResponsiveContext.Consumer> */}\n\t\t<Main pad=\"medium\">\n\t\t<Box\n\t\t\t\tdirection=\"column\"\n\t\t\t\tborder={{ color: 'brand', size: 'large' }}\n\t\t\t\tpad=\"medium\"\n\t\t\t\tgap='medium'\n\t\t\t\theight='full'\n\t\t\t>\n\t\t\t<Box\n\t\t\t\tdirection=\"row\"\n\t\t\t\t// border={{ color: 'brand', size: 'large' }}\n\t\t\t\tpad=\"small\"\n\t\t\t\tgap='medium'\n\t\t\t\theight='small'\n\t\t\t>\n\t\t\t\t<Box pad=\"none\" justify='center'>\n\t\t\t\t\t{/*  */}\n\t\t\t\t\t<Card background='light-2' height='small'>\n\t\t\t\t\t\t<CardBody pad='small' justify='center'><Avatar size='xlarge' src=\"//s.gravatar.com/avatar/b7fb138d53ba0f573212ccce38a7c43b?\" /></CardBody>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box pad=\"none\" direction='column' basis='full'>\n\t\t\t\t\t<Card background='light-2' height='small'>\n\t\t\t\t\t\t<CardBody pad='small'>\n\t\t\t\t\t\t\t<Heading margin='none' level={4}>Wendy Little</Heading>\n\t\t\t\t\t\t\t<Paragraph maxLines={2} size='small' margin={{ bottom: 'xsmall' }}>418 Kohler Crossroad Unit 74, Medford, Massachusetts, 02145</Paragraph>\n\t\t\t\t\t\t\t<Box direction='row' gap='xsmall' wrap={true} width='xxlarge'>\n\t\t\t\t\t\t\t\t<Tag size='xsmall' name=\"Gender\" value=\"F\" />\n\t\t\t\t\t\t\t\t<Tag size='xsmall' name=\"DOB\" value=\"2000-11-15\" />\n\t\t\t\t\t\t\t\t<Tag size='xsmall' name=\"Height\" value=\"153cm\" />\n\t\t\t\t\t\t\t\t<Tag size='xsmall' name=\"Weight\" value=\"130lbs\" />\n\t\t\t\t\t\t\t\t<Tag size='xsmall' name=\"Blood type\" value=\"O +\" />\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t</Card>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box\n\t\t\t\tdirection=\"row\"\n\t\t\t\tborder={{ color: 'brand', size: 'large' }}\n\t\t\t\tpad=\"medium\"\n\t\t\t\theight=\"full\"\n\t\t\t\t// background='dark-3'\n\t\t\t>\n\n\t\t\t\t<Tabs justify='start' basis='full'>\n\t\t\t\t\t<Tab title=\"Pain Body Location Map\">\n\t\t\t\t\t\t<Box pad=\"medium\" height={'full'}>\n\t\t\t\t\t\t\t<Image fit='contain' src={LocationImg} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Tab>\n\t\t\t\t\t<Tab title=\"Pain Tracker\">\n\t\t\t\t\t\t<Box pad=\"medium\" height={'full'}>\n\t\t\t\t\t\t\t<Image fit='contain' fill src={TrackerImg} />\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Tab>\n\t\t\t\t</Tabs>\n\t\t\t</Box>\n\t\t</Box>\n\t\t</Main>\n\t\t{/* </ResponsiveContext.Consumer> */}\n\t</Grommet>\n}\n\nexport default StaticPatient;","import * as React from \"react\";\nimport Patient from './Patient'\nimport StaticPatient from './StaticPatient';\n\n\nfunction App({ patient, meds }) {\n  if (!(patient && meds)) console.log('Rendering Static App');\n  if (patient && meds) return <Patient patient={patient} meds ={meds}/>;\n  else return <StaticPatient/>\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n// import { oauth2 as SMART } from \"fhirclient\";\nimport { oauth2 as SMART } from 'fhirclient-pkce';\n\nconst rootElement = document.getElementById('root');\n\nSMART.init({\n    // iss: \"https://r4.smarthealthit.org\",\n    // iss: \"https://api.platform.athenahealth.com/432/brand/2/csg/12/fhir/r4\",\n    // redirectUri: \"index.html\",\n    // clientId: \"0oae0chrocZumXh7y297\",  // Internal AMS\n    clientId: \"0oae3i5p2p4ikNR4C297\",     // External AMS\n    scope: \"launch offline_access openid fhirUser\",\n    pkceMode: \"required\",\n\n    // WARNING: completeInTarget=true is needed to make this work in the codesandbox\n    // frame. It is otherwise not needed if the target is not another frame or window\n    // but since the entire example works in a frame here, it gets confused without\n    // setting this!\n    completeInTarget: true\n})\n    .then(client => {\n        // Fetch MedicationRequest and Patient in parallel to load the app faster\n        return Promise.all([\n            client.patient.read(),\n            client.request(`/MedicationRequest?patient=${client.patient.id}`, {\n                resolveReferences: \"medicationReference\",\n                pageLimit: 0,\n                flat: true\n            }),\n        ]);\n    })\n    .then(\n        ([patient, meds]) => {\n            render(<App \n                patient={patient} \n                meds={meds}\n            />, rootElement);\n        },\n        error => {\n            console.error(error);\n            render(<App \n                patient={undefined} \n                meds={undefined}\n            />, rootElement);\n        }\n    );\n"],"sourceRoot":""}